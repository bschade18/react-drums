{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["drumPad","fontSize","padding","borderRadius","height","width","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","display","handleClickQ","bind","assertThisInitialized","handleClickW","handleClickE","handleClickA","handleClickS","handleClickD","handleClickZ","handleClickX","handleClickC","handleKeyPress","document","addEventListener","removeEventListener","getElementById","play","setState","event","keyCode","react_default","a","createElement","id","className","onClick","style","src","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99ea77a1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst drumPad = {\n  fontSize: 25,\n  padding: 15,\n  borderRadius: 5,\n  height: 75,\n  width: 90\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"\"\n    };\n    this.handleClickQ = this.handleClickQ.bind(this);\n    this.handleClickW = this.handleClickW.bind(this);\n    this.handleClickE = this.handleClickE.bind(this);\n    this.handleClickA = this.handleClickA.bind(this);\n    this.handleClickS = this.handleClickS.bind(this);\n    this.handleClickD = this.handleClickD.bind(this);\n    this.handleClickZ = this.handleClickZ.bind(this);\n    this.handleClickX = this.handleClickX.bind(this);\n    this.handleClickC = this.handleClickC.bind(this);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  handleClickQ() {\n    const qSound = document.getElementById(\"Q\");\n    qSound.play();\n    this.setState({\n      display: \"Do\"\n    });\n  }\n  handleClickW() {\n    const qSound = document.getElementById(\"W\");\n    qSound.play();\n    this.setState({\n      display: \"Re\"\n    });\n  }\n  handleClickE() {\n    const qSound = document.getElementById(\"E\");\n    qSound.play();\n    this.setState({\n      display: \"Mi\"\n    });\n  }\n  handleClickA() {\n    const qSound = document.getElementById(\"A\");\n    qSound.play();\n    this.setState({\n      display: \"Funk\"\n    });\n  }\n  handleClickS() {\n    const qSound = document.getElementById(\"S\");\n    qSound.play();\n    this.setState({\n      display: \"Clap\"\n    });\n  }\n  handleClickD() {\n    const qSound = document.getElementById(\"D\");\n    qSound.play();\n    this.setState({\n      display: \"Cymbal\"\n    });\n  }\n  handleClickZ() {\n    const qSound = document.getElementById(\"Z\");\n    qSound.play();\n    this.setState({\n      display: \"Drop It\"\n    });\n  }\n  handleClickX() {\n    const qSound = document.getElementById(\"X\");\n    qSound.play();\n    this.setState({\n      display: \"Smooth\"\n    });\n  }\n  handleClickC() {\n    const qSound = document.getElementById(\"C\");\n    qSound.play();\n    this.setState({\n      display: \"Fly\"\n    });\n  }\n  handleKeyPress(event) {\n    if (event.keyCode === 81) {\n      this.handleClickQ();\n    } else if (event.keyCode === 87) {\n      this.handleClickW();\n    } else if (event.keyCode === 69) {\n      this.handleClickE();\n    } else if (event.keyCode === 65) {\n      this.handleClickA();\n    } else if (event.keyCode === 83) {\n      this.handleClickS();\n    } else if (event.keyCode === 68) {\n      this.handleClickD();\n    } else if (event.keyCode === 90) {\n      this.handleClickZ();\n    } else if (event.keyCode === 88) {\n      this.handleClickX();\n    } else if (event.keyCode === 67) {\n      this.handleClickC();\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"drum-machine\">\n          <button\n            id=\"Qpad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickQ}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\n              className=\"clip\"\n              id=\"Q\"\n            />\n            Q\n          </button>\n          <button\n            id=\"Wpad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickW}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\n              className=\"clip\"\n              id=\"W\"\n            />\n            W\n          </button>\n          <button\n            id=\"Epad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickE}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\n              className=\"clip\"\n              id=\"E\"\n            />\n            E\n          </button>\n          <button\n            id=\"Apad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickA}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\n              className=\"clip\"\n              id=\"A\"\n            />\n            A\n          </button>\n          <button\n            id=\"Spad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickS}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\n              className=\"clip\"\n              id=\"S\"\n            />\n            S\n          </button>\n          <button\n            id=\"Dpad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickD}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\n              className=\"clip\"\n              id=\"D\"\n            />\n            D\n          </button>\n          <button\n            id=\"Zpad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickZ}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n              className=\"clip\"\n              id=\"Z\"\n            />\n            Z\n          </button>\n          <button\n            id=\"Xpad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickX}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\n              className=\"clip\"\n              id=\"X\"\n            />\n            X\n          </button>\n          <button\n            id=\"Cpad\"\n            className=\"drum-pad\"\n            onClick={this.handleClickC}\n            style={drumPad}\n          >\n            <audio\n              src=\"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\n              className=\"clip\"\n              id=\"C\"\n            />\n            C\n          </button>\n          <div id=\"display-container\">\n            <div id=\"display\">{this.state.display}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}